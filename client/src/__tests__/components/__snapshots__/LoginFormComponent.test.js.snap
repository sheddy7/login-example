// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginFormComponent /> renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginFormComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <MuiThemeProvider>
        <Paper
                circle={false}
                rounded={true}
                style={
                        Object {
                                "display": "inline-block",
                                "height": 350,
                                "margin": 20,
                                "textAlign": "center",
                                "width": 300,
                              }
                }
                transitionEnabled={true}
                zDepth={1}
        >
                <TextField
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="email address"
                        fullWidth={false}
                        multiLine={false}
                        name="email"
                        onChange={undefined}
                        rows={1}
                        type="email"
                        underlineShow={true}
                        value={undefined}
                />
                <TextField
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="password"
                        fullWidth={false}
                        multiLine={false}
                        name="password"
                        onChange={undefined}
                        rows={1}
                        type="password"
                        underlineShow={true}
                        value={undefined}
                />
                <RaisedButton
                        containerElement="label"
                        disabled={false}
                        fullWidth={false}
                        label="Login"
                        labelPosition="before"
                        primary={true}
                        secondary={false}
                        style={
                                Object {
                                        "margin": 30,
                                      }
                        }
                >
                        <input
                                id="submitButton"
                                type="submit"
                                value="Login"
                        />
                </RaisedButton>
                <div
                        className="message"
                />
        </Paper>
</MuiThemeProvider>,
      "name": "loginForm",
      "onSubmit": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Paper
          circle={false}
          rounded={true}
          style={
                    Object {
                              "display": "inline-block",
                              "height": 350,
                              "margin": 20,
                              "textAlign": "center",
                              "width": 300,
                            }
          }
          transitionEnabled={true}
          zDepth={1}
>
          <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    floatingLabelText="email address"
                    fullWidth={false}
                    multiLine={false}
                    name="email"
                    onChange={undefined}
                    rows={1}
                    type="email"
                    underlineShow={true}
                    value={undefined}
          />
          <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    floatingLabelText="password"
                    fullWidth={false}
                    multiLine={false}
                    name="password"
                    onChange={undefined}
                    rows={1}
                    type="password"
                    underlineShow={true}
                    value={undefined}
          />
          <RaisedButton
                    containerElement="label"
                    disabled={false}
                    fullWidth={false}
                    label="Login"
                    labelPosition="before"
                    primary={true}
                    secondary={false}
                    style={
                              Object {
                                        "margin": 30,
                                      }
                    }
          >
                    <input
                              id="submitButton"
                              type="submit"
                              value="Login"
                    />
          </RaisedButton>
          <div
                    className="message"
          />
</Paper>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <TextField
              disabled={false}
              floatingLabelFixed={false}
              floatingLabelText="email address"
              fullWidth={false}
              multiLine={false}
              name="email"
              onChange={undefined}
              rows={1}
              type="email"
              underlineShow={true}
              value={undefined}
/>,
            <TextField
              disabled={false}
              floatingLabelFixed={false}
              floatingLabelText="password"
              fullWidth={false}
              multiLine={false}
              name="password"
              onChange={undefined}
              rows={1}
              type="password"
              underlineShow={true}
              value={undefined}
/>,
            <RaisedButton
              containerElement="label"
              disabled={false}
              fullWidth={false}
              label="Login"
              labelPosition="before"
              primary={true}
              secondary={false}
              style={
                            Object {
                                          "margin": 30,
                                        }
              }
>
              <input
                            id="submitButton"
                            type="submit"
                            value="Login"
              />
</RaisedButton>,
            <div
              className="message"
/>,
          ],
          "circle": false,
          "rounded": true,
          "style": Object {
            "display": "inline-block",
            "height": 350,
            "margin": 20,
            "textAlign": "center",
            "width": 300,
          },
          "transitionEnabled": true,
          "zDepth": 1,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "floatingLabelFixed": false,
              "floatingLabelText": "email address",
              "fullWidth": false,
              "multiLine": false,
              "name": "email",
              "onChange": undefined,
              "rows": 1,
              "type": "email",
              "underlineShow": true,
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "floatingLabelFixed": false,
              "floatingLabelText": "password",
              "fullWidth": false,
              "multiLine": false,
              "name": "password",
              "onChange": undefined,
              "rows": 1,
              "type": "password",
              "underlineShow": true,
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <input
                id="submitButton"
                type="submit"
                value="Login"
/>,
              "containerElement": "label",
              "disabled": false,
              "fullWidth": false,
              "label": "Login",
              "labelPosition": "before",
              "primary": true,
              "secondary": false,
              "style": Object {
                "margin": 30,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "submitButton",
                "type": "submit",
                "value": "Login",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "message",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <MuiThemeProvider>
          <Paper
                    circle={false}
                    rounded={true}
                    style={
                              Object {
                                        "display": "inline-block",
                                        "height": 350,
                                        "margin": 20,
                                        "textAlign": "center",
                                        "width": 300,
                                      }
                    }
                    transitionEnabled={true}
                    zDepth={1}
          >
                    <TextField
                              disabled={false}
                              floatingLabelFixed={false}
                              floatingLabelText="email address"
                              fullWidth={false}
                              multiLine={false}
                              name="email"
                              onChange={undefined}
                              rows={1}
                              type="email"
                              underlineShow={true}
                              value={undefined}
                    />
                    <TextField
                              disabled={false}
                              floatingLabelFixed={false}
                              floatingLabelText="password"
                              fullWidth={false}
                              multiLine={false}
                              name="password"
                              onChange={undefined}
                              rows={1}
                              type="password"
                              underlineShow={true}
                              value={undefined}
                    />
                    <RaisedButton
                              containerElement="label"
                              disabled={false}
                              fullWidth={false}
                              label="Login"
                              labelPosition="before"
                              primary={true}
                              secondary={false}
                              style={
                                        Object {
                                                  "margin": 30,
                                                }
                              }
                    >
                              <input
                                        id="submitButton"
                                        type="submit"
                                        value="Login"
                              />
                    </RaisedButton>
                    <div
                              className="message"
                    />
          </Paper>
</MuiThemeProvider>,
        "name": "loginForm",
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Paper
            circle={false}
            rounded={true}
            style={
                        Object {
                                    "display": "inline-block",
                                    "height": 350,
                                    "margin": 20,
                                    "textAlign": "center",
                                    "width": 300,
                                  }
            }
            transitionEnabled={true}
            zDepth={1}
>
            <TextField
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="email address"
                        fullWidth={false}
                        multiLine={false}
                        name="email"
                        onChange={undefined}
                        rows={1}
                        type="email"
                        underlineShow={true}
                        value={undefined}
            />
            <TextField
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="password"
                        fullWidth={false}
                        multiLine={false}
                        name="password"
                        onChange={undefined}
                        rows={1}
                        type="password"
                        underlineShow={true}
                        value={undefined}
            />
            <RaisedButton
                        containerElement="label"
                        disabled={false}
                        fullWidth={false}
                        label="Login"
                        labelPosition="before"
                        primary={true}
                        secondary={false}
                        style={
                                    Object {
                                                "margin": 30,
                                              }
                        }
            >
                        <input
                                    id="submitButton"
                                    type="submit"
                                    value="Login"
                        />
            </RaisedButton>
            <div
                        className="message"
            />
</Paper>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="email address"
                fullWidth={false}
                multiLine={false}
                name="email"
                onChange={undefined}
                rows={1}
                type="email"
                underlineShow={true}
                value={undefined}
/>,
              <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="password"
                fullWidth={false}
                multiLine={false}
                name="password"
                onChange={undefined}
                rows={1}
                type="password"
                underlineShow={true}
                value={undefined}
/>,
              <RaisedButton
                containerElement="label"
                disabled={false}
                fullWidth={false}
                label="Login"
                labelPosition="before"
                primary={true}
                secondary={false}
                style={
                                Object {
                                                "margin": 30,
                                              }
                }
>
                <input
                                id="submitButton"
                                type="submit"
                                value="Login"
                />
</RaisedButton>,
              <div
                className="message"
/>,
            ],
            "circle": false,
            "rounded": true,
            "style": Object {
              "display": "inline-block",
              "height": 350,
              "margin": 20,
              "textAlign": "center",
              "width": 300,
            },
            "transitionEnabled": true,
            "zDepth": 1,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "floatingLabelFixed": false,
                "floatingLabelText": "email address",
                "fullWidth": false,
                "multiLine": false,
                "name": "email",
                "onChange": undefined,
                "rows": 1,
                "type": "email",
                "underlineShow": true,
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "floatingLabelFixed": false,
                "floatingLabelText": "password",
                "fullWidth": false,
                "multiLine": false,
                "name": "password",
                "onChange": undefined,
                "rows": 1,
                "type": "password",
                "underlineShow": true,
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <input
                  id="submitButton"
                  type="submit"
                  value="Login"
/>,
                "containerElement": "label",
                "disabled": false,
                "fullWidth": false,
                "label": "Login",
                "labelPosition": "before",
                "primary": true,
                "secondary": false,
                "style": Object {
                  "margin": 30,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "submitButton",
                  "type": "submit",
                  "value": "Login",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "message",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
